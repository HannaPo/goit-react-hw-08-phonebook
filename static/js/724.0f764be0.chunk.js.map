{"version":3,"file":"static/js/724.0f764be0.chunk.js","mappings":"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","sources":["pages/App.styled.jsx","icons/cross.svg","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 1rem;\n  max-width: 460px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    max-width: 600px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 800px;\n  }\n`;\n\nexport const Title = styled.h1`\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n  text-align: center;\n`;\n\nexport const ContactsTitle = styled.h2`\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n`;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCross(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"cross\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCross);\nexport default __webpack_public_path__ + \"static/media/cross.9c28437a815574ed3c0f3fe9faa0bbe2.svg\";\nexport { ForwardRef as ReactComponent };","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.IsLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n  max-width: 270px;\n`;\n\nexport const Label = styled.label`\n  font-weight: bold;\n  margin-bottom: 0.5rem;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 2px;\n`;\n\n// export const Button = styled.button`\n//   width: 125px;\n//   padding: 0.5rem 1rem;\n//   color: #fff;\n//   border: none;\n//   border-radius: 4px;\n//   cursor: pointer;\n//   background-color: #007bff;\n\n//   &:hover {\n//     background-color: #3291f7;\n//   }\n// `;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { Form, Label, Input } from './ContactForm.styled';\nimport { Button } from '@mui/material';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isDuplicate = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number\n    );\n\n    if (isDuplicate) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ id: nanoid(), name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button variant=\"outlined\" size=\"small\"  type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n  color: #333;\n  font-size: 14px;\n  line-height: 1.25;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 2px;\n  margin-bottom: 0.5rem;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <div>\n      <Label>\n        Find contacts by name\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          id=\"filter\"\n          value={filter}\n          onChange={e => dispatch(filterContacts(e.target.value))}\n        />\n      </Label>\n    </div>\n  );\n};\n\nexport default Filter;","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.ul`\n  max-width: 280px;\n  font-size: 14px;\n  line-height: 1.5;\n  gap: 10px;\n  `;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.3rem;\n  font-size: small;\n  line-height: 1.25;\n`;\n\nexport const Button = styled.button`\n  font-size: 10px;\n  padding: 0.4rem;\n  text-align: center;\n  border: none;\n  background-color: #fff;\n  cursor: pointer;\n\n  &:hover {\n        color: #fff;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { Wrapper, Item, Button } from './ContactList.styled';\nimport { ReactComponent as DeleteIcon } from '../../icons/cross.svg';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <Wrapper>\n      {filteredContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          {name}: {number}\n          <Button\n            type=\"button\"\n            aria-label=\"Delete contact\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <DeleteIcon />\n          </Button>\n        </Item>\n      ))}\n    </Wrapper>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Helmet } from 'react-helmet';\nimport { selectContacts, selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\n// Components\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport { Container, Title, ContactsTitle } from './App.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <Helmet>\n          <Title>Phonebook</Title>\n        </Helmet>\n        <ContactForm />\n        <ContactsTitle>Contacts</ContactsTitle>\n        <Filter />\n        {isLoading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n        {contacts.length === 0 && <p>No contacts found</p>}\n        <ContactList />\n      </Container>\n    </>\n  );\n}"],"names":["Container","styled","Title","ContactsTitle","_path","selectContacts","state","contacts","items","selectIsLoading","IsLoading","selectError","error","selectFilter","filter","Form","Label","Input","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","event","target","value","onSubmit","preventDefault","some","contact","toLowerCase","alert","addContact","id","nanoid","type","onChange","title","required","Button","variant","size","e","filterContacts","Wrapper","Item","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCross","_ref","svgRef","titleId","props","xmlns","width","height","viewBox","ref","undefined","d","ForwardRef","filteredContacts","includes","map","onClick","deleteContact","Contacts","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}